services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181" 

  zoonavigator:
    image: elkozmon/zoonavigator
    container_name: zoonavigator
    ports:
      - "9000:9000"
    depends_on: 
      - zookeeper
    network_mode: host
    
  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENERS: INTERNAL_LISTENER://kafka-1:9092,EXTERNAL_LISTENER://kafka-1:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_LISTENER://kafka-1:9092,EXTERNAL_LISTENER://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_LISTENER:PLAINTEXT,EXTERNAL_LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_LISTENER
  
  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    ports:
      - "19093:19093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENERS: INTERNAL_LISTENER://kafka-2:9092,EXTERNAL_LISTENER://kafka-2:19093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_LISTENER://kafka-2:9092,EXTERNAL_LISTENER://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_LISTENER:PLAINTEXT,EXTERNAL_LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_LISTENER
  
  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3
    ports:
      - "19094:19094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENERS: INTERNAL_LISTENER://kafka-3:9092,EXTERNAL_LISTENER://kafka-3:19094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_LISTENER://kafka-3:9092,EXTERNAL_LISTENER://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_LISTENER:PLAINTEXT,EXTERNAL_LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_LISTENER
      
  producer:
    image: distributed.replication.kafka.testwebclient
    container_name: producer
    ports:
      - "5116:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    build:
      context: .
      dockerfile: Distributed.Replication.Kafka.TestWebClient/Dockerfile
    command: ["dotnet", "Distributed.Replication.Kafka.TestWebClient.dll", "--bootstrap-servers", "kafka-1:9092,kafka-2:9092,kafka-3:9092", "--type", "producer"]

  consumer-1:
    image: distributed.replication.kafka.testwebclient
    container_name: consumer-1
    ports:
      - "5117:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    build:
      context: .
      dockerfile: Distributed.Replication.Kafka.TestWebClient/Dockerfile
    command: ["dotnet", "Distributed.Replication.Kafka.TestWebClient.dll", "--bootstrap-servers", "kafka-1:9092,kafka-2:9092,kafka-3:9092", "--type", "consumer"]

  consumer-2:
    image: distributed.replication.kafka.testwebclient
    container_name: consumer-2
    ports:
      - "5118:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    build:
      context: .
      dockerfile: Distributed.Replication.Kafka.TestWebClient/Dockerfile
    command: ["dotnet", "Distributed.Replication.Kafka.TestWebClient.dll", "--bootstrap-servers", "kafka-1:9092,kafka-2:9092,kafka-3:9092", "--type", "consumer"]

